-- sorry for the delay
-- my synth isn;t in time.... OKKKKKKKKKKK

setcps (137/4/60)

d9 $ midicmd "midiClock*48" # s "[ro]" # midichan "0"

d11 $ (0.05 ~>) $ (slow 16)
$ note (scale "mixolydian" "<0 0 2 4>" -24) # sound "ro" # midichan "0" # legato "<2>"

d11 silence

d1 $ slow 8 $ chop 64 $ chunk 4 (hurry 2) $ sound "9bd 9bd/2 9bd/3 9bd/4" # gain 0.8 # pan rand

d2 $ chop 32 $ degradeBy 0.8 $ sometimes (hurry "<0.5 2>") $ jux (slow 2) $ n "{1 1 ~ 1, ~ ~ 2 [~ 3] ~,  [4 [[5 5]]6 7] ~ ~ ~ ~ ~}" # sound "cpu"

d7 $ degradeBy 0.8 $ iter 4 $ density "<1 1 1 2 2 4>" $ loopAt "<2 1 0.5>" $ striate "<4 4 8>" $ sound "emub:1*4 emufx" # gain 0.9 # legato 0.5

d8 $ chop 128 $ chunk 2 (# gain 0) $  jux (rev) $ slice 32 "0 1 3 5 [~ 8] 9*2 ~ 10" $ sound "mod:1"

hush

all $ degradeBy 0

--samples
steeldrum
woodblock
jinglebells
potsandpans
doomgong

cbass
cchime
cdexed
cdrum
cwubby

hbird
hperc

emupiano
emus
emustab
emustr

emh
isa
temp
mod
obey
lux
rom
bub
cpu2
bb

-- SOME NOTES

<64 68 71 >
<60 64 68 71>
<63 66 69>
<59 63 66 69>

-- RO CONTROLS

74 Cutoff
71 Resonance
73 Env Mod
77 LFO Depth
80 Vibrato Mod LFO
75 ENV Decay
103 ENV Sustain
72 ENV Release
5 Glide

-- bump

import Data.Map.Strict as Map

bump :: String -> Integer -> Pattern Bool -> ControlPattern -> ControlPattern
bump name bpc bpat pat = (Pattern $ \state -> query (maybe (bumper `overlay` pat) f $ (Map.lookup name $ controls state) >>= getR) state)
  where f t = rotL t (bumper `overlay` pat)
        bumper :: ControlPattern
        bumper = (outerJoin $ (const $ pure $ Map.singleton ("__" ++ name) $ VState statef) <$> (filterOnsets $ filterValues id (rotL (1%bpc) bpat)))
          where statef :: ValueMap -> (ValueMap, Value)
                statef sMap = (Map.insert name v sMap, v)
                  where v = VR $ maybe 0 (+(1%bpc)) $ Map.lookup name sMap >>= getR
